<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值设置成包名+DAO接口名，这样就能够保证namespace的值是唯一的并能够匹配DAO接口 
	例如namespace="com.slsd.dao.ITeacherDao"就是com.slsd.dao(包名)+ITeacherDao(接口名) -->
<mapper namespace="cn.edu.zjweu.dao.CommentDao">
	<!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复 使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 
		resultType="com.slsd.entity.Teacher"就表示将查询结果封装成一个Teacher类的对象返回Teacher类就是teacher表所对应的实体类 -->
	<!-- 根据id查询得到一个user对象 -->
	
	<select id="getAllComments" resultType="Comment">
		<!-- select * from (select comment.*,rownum rn from comment  order by commentID ) where  rn between #{begin} and #{end} -->
		select * from comments
	</select>
	
	<select id="getCommentsByBookId" parameterType="int" resultType="Comment">
		select comments.* from comments where bookid=#{bookID} and INID=0 order by commentid
	</select>
	
	<select id="getCommentsByInid" parameterType="int" resultType="Comment">
		<!-- select * from (select comment.*,rownum rn from comment where inid=#{0} order by commentID ) where  rn between #{1} and #{2} -->
		select * from comments where INID=#{INID} order by commentid
	</select>
	
	<insert id="addComment" parameterType="Comment" useGeneratedKeys="false" keyProperty="commentID">
		insert into comments(commentid,userid,commentDate,content,INID,bookID,cReported,hits) values(COMMENTSQUENCE.nextVal,#{userID},sysdate,#{content},#{INID},#{bookID},#{cReported},#{hits})
	</insert>
	
	
</mapper>